kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: {{ experimentName }}
  namespace: {{ litmusNamespace | default("litmus") }}
spec:
  {% raw %}
  templates:
    - name: pod-network-latency-wf
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults
        - - name: pod-network-latency
            template: pod-network-latency
        - - name: cleanup-chaos-resources
            template: cleanup-chaos-resources
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: pod-network-latency
            path: /tmp/pod-network-latency.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network latency on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-latency
                  labels:
                    name: pod-network-latency
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.1.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos/go-runner:3.1.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-latency
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: LIB_IMAGE
                        value: litmuschaos/go-runner:3.1.0
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_LATENCY
                        value: "2000"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: JITTER
                        value: "0"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-network-latency
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.1.0
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}}
            && sleep 30
    - name: cleanup-chaos-resources
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl delete chaosengine -l workflow_run_id={{ workflow.uid }} -n
            {{ workflow.parameters.adminModeNamespace }}
    - name: pod-network-latency
      inputs:
        artifacts:
          - name: pod-network-latency
            path: /tmp/chaosengine-pod-network-latency.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: pod-network-latency
                  namespace: "{{ workflow.parameters.adminModeNamespace }}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  generateName: pod-network-latency
                spec:
                  engineState: active
                  appinfo:
                    appns: "{{ workflow.parameters.appNamespace }}"
                    applabel: "app={{ workflow.parameters.appLabel }}"
                    appkind: "{{ workflow.parameters.appKind }}"
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-latency
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "{{ workflow.parameters.experimentDuration }}"
                            - name: RAMP_TIME
                              value: "{{ workflow.parameters.experimentRampTime }}"
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: LIB_IMAGE
                              value: litmuschaos/go-runner:3.1.0
                            - name: TC_IMAGE
                              value: gaiadocker/iproute2
                            - name: NETWORK_LATENCY
                              value: "{{ workflow.parameters.appNetworkLatency }}"
                            - name: JITTER
                              value: "{{ workflow.parameters.appJitter }}"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: DEFAULT_HEALTH_CHECK
                              value: "true"
                            - name: DESTINATION_IPS
                              value: ""
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-latency.yaml
          - -saveName=/tmp/engine-name
  {% endraw %}
  entrypoint: pod-network-latency-wf
  arguments:
    parameters:
      - name: adminModeNamespace
        value: {{ litmusNamespace | default("litmus") }}
      - name: experimentDuration
        value: {{ experimentDuration | default("120") }}
      - name: experimentRampTime
        value: {{ experimentRampTime | default("0") }}
      - name: appNamespace
        value: {{ appNamespace }}
      - name: appLabel
        value: {{ appLabel }}
      - name: appKind
        value: {{ appKind | default("deployment") }}
      - name: appNetworkLatency
        value: {{ appNetworkLatency | default("1000") }}
      - name: appJitter
        value: {{ appJitter | default("50") }}
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
